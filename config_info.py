# config_info.py

import click  # th∆∞ vi·ªán t·∫°o CLI (Command Line Interface) d·ªÖ d√πng
from modules.config import LLM_CONFIG  # import c·∫•u h√¨nh LLM ƒë√£ thi·∫øt l·∫≠p s·∫µn
from modules.model_fetcher import ModelFetcher  # import l·ªõp fetcher ƒë·ªÉ l·∫•y danh s√°ch models

@click.group()  # ƒë·ªãnh nghƒ©a nh√≥m l·ªánh ch√≠nh cho CLI
def cli():
    """
    Nh√≥m l·ªánh CLI ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin c·∫•u h√¨nh v√† danh s√°ch models.
    """
    pass  # kh√¥ng l√†m g√¨, ch·ªâ d√πng ƒë·ªÉ group c√°c l·ªánh con

@cli.command()  # ƒë√°nh d·∫•u h√†m n√†y l√† m·ªôt l·ªánh con c·ªßa nh√≥m cli
def info():
    """
    Hi·ªÉn th·ªã c·∫•u h√¨nh hi·ªán t·∫°i c·ªßa LLM:
    - Provider (Google ho·∫∑c OpenRouter)
    - Model ƒëang s·ª≠ d·ª•ng
    - Tr·∫°ng th√°i API Key (c√≥ ho·∫∑c kh√¥ng)
    - S·ªë l∆∞·ª£ng models kh·∫£ d·ª•ng
    """
    # in ƒë∆∞·ªùng k·∫ª ph√¢n c√°ch
    click.echo("=" * 60)
    # in provider (ch·ªØ hoa) ƒë·ªÉ d·ªÖ ph√¢n bi·ªát
    click.echo(f"Provider:      {LLM_CONFIG['provider'].upper()}")
    # in t√™n model ƒëang d√πng
    click.echo(f"Model:         {LLM_CONFIG['model']}")
    # ki·ªÉm tra xem API key c√≥ hay kh√¥ng, hi·ªÉn th·ªã bi·ªÉu t∆∞·ª£ng t∆∞∆°ng ·ª©ng
    has_key = "üîë" if LLM_CONFIG.get("api_key") else "‚ùå"
    click.echo(f"API Key:       {has_key}")
    # ƒë·∫øm s·ªë models kh·∫£ d·ª•ng, d√πng get ƒë·ªÉ tr√°nh l·ªói n·∫øu key kh√¥ng t·ªìn t·∫°i
    count = len(LLM_CONFIG.get("available_models", []))
    click.echo(f"Models avail.: {count}")
    # in ƒë∆∞·ªùng k·∫ª k·∫øt th√∫c
    click.echo("=" * 60)

@cli.command()  # ƒë√°nh d·∫•u h√†m n√†y l√† l·ªánh con th·ª© hai
def list_models():
    """
    Li·ªát k√™ chi ti·∫øt c√°c models kh·∫£ d·ª•ng t·ª´ API c·ªßa provider hi·ªán t·∫°i.
    Model ƒëang ch·ªçn s·∫Ω ƒë∆∞·ª£c ƒë√°nh d·∫•u b·∫±ng d·∫•u '*'.
    """
    # ƒë·ªçc provider v√† api_key t·ª´ c·∫•u h√¨nh
    provider = LLM_CONFIG.get("provider")
    api_key = LLM_CONFIG.get("api_key")

    # l·∫•y danh s√°ch models tu·ª≥ theo provider
    if provider == "google":
        models = ModelFetcher.get_google_models(api_key)
    else:
        # v·ªõi OpenRouter, get_openrouter_models tr·∫£ v·ªÅ list dict, n√™n l·∫•y 'id'
        models = [m.get("id", "") for m in ModelFetcher.get_openrouter_models(api_key)]

    # in t·ª´ng model, n·∫øu tr√πng v·ªõi model ƒëang d√πng th√¨ th√™m d·∫•u *
    for m in models:
        mark = " *" if m == LLM_CONFIG.get("model") else ""
        click.echo(f"- {m}{mark}")

# khi ch·∫°y file n√†y tr·ª±c ti·∫øp (kh√¥ng ph·∫£i import), s·∫Ω g·ªçi l·ªánh CLI
if __name__ == "__main__":
    cli()  # kh·ªüi ch·∫°y CLI
